Backport of:

From 4b41a27b66f09ac81550958c0bfda989d936642d Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Wed, 26 Apr 2017 17:07:38 -0400
Subject: [PATCH] CVE-2017-8351

The ReadPCDImage function in pcd.c allows attackers to cause a denial
of service (memory leak) via a crafted file.

bug: https://github.com/ImageMagick/ImageMagick/issues/448
origin: https://github.com/ImageMagick/ImageMagick/commit/23071f835d44e661177957fde0add67db7788a69
bug-debian: https://bugs.debian.org/862589
---
 coders/pcd.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

Index: imagemagick-6.7.7.10/coders/pcd.c
===================================================================
--- imagemagick-6.7.7.10.orig/coders/pcd.c	2017-05-26 08:58:46.839071408 -0400
+++ imagemagick-6.7.7.10/coders/pcd.c	2017-05-26 08:59:50.039876401 -0400
@@ -543,7 +543,10 @@ static Image *ReadPCDImage(const ImageIn
   overview=LocaleNCompare((char *) header,"PCD_OPA",7) == 0;
   if ((count == 0) ||
       ((LocaleNCompare((char *) header+0x800,"PCD",3) != 0) && (overview == 0)))
-    ThrowReaderException(CorruptImageError,"ImproperImageHeader");
+    {
+      header=(unsigned char *) RelinquishMagickMemory(header);
+      ThrowReaderException(CorruptImageError,"ImproperImageHeader");
+    }
   rotate=header[0x0e02] & 0x03;
   number_images=(header[10] << 8) | header[11];
   header=(unsigned char *) RelinquishMagickMemory(header);
@@ -686,7 +689,7 @@ static Image *ReadPCDImage(const ImageIn
         }
         image->colorspace=YCCColorspace;
         if (LocaleCompare(image_info->magick,"PCDS") == 0)
-          SetImageColorspace(image,sRGBColorspace);
+          (void) SetImageColorspace(image,sRGBColorspace);
         if (j < (ssize_t) number_images)
           {
             /*
@@ -840,7 +843,7 @@ static Image *ReadPCDImage(const ImageIn
   image->gamma=1.000f/2.200f;
   image->colorspace=YCCColorspace;
   if (LocaleCompare(image_info->magick,"PCDS") == 0)
-    SetImageColorspace(image,sRGBColorspace);
+    (void) SetImageColorspace(image,sRGBColorspace);
   return(GetFirstImageInList(image));
 }
 
