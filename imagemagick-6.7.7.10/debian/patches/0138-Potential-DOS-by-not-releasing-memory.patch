Backport of:

From 3f546d9eca76b92fc1f7255c998ddc0055336d21 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 7 Jan 2016 09:08:49 -0500
Subject: [PATCH] Potential DOS by not releasing memory

There is a resource leak in AcquireVirtualMemory resulting in major
performance degradation whenever AcquireMagickResource starts
returning false. The problem is that AcquireMagickResource calls are
not paired with calls to RelinquishMagickResource if a resource limit
is hit.

Eventually all allocations and pixel caches will start using
file-backed storage leading to major performance degradations.

Another issue is that AcquireVirtualMemory does not remove temporary
files created for failed file-backed memory mappings. This has been
adressed in IM 7.

origin; upstream, https://github.com/ImageMagick/ImageMagick/commit/4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c
bug: http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28946
bug-debian: https://bug.debian.org/833101
---
 magick/cache.c | 17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

Index: imagemagick-6.7.7.10/magick/cache.c
===================================================================
--- imagemagick-6.7.7.10.orig/magick/cache.c	2016-11-14 10:44:09.697265097 -0500
+++ imagemagick-6.7.7.10/magick/cache.c	2016-11-14 10:45:12.261268015 -0500
@@ -3950,19 +3950,6 @@
 %
 */
 
-static inline void AllocatePixelCachePixels(CacheInfo *cache_info)
-{
-  cache_info->mapped=MagickFalse;
-  cache_info->pixels=(PixelPacket *) AcquireMagickMemory((size_t)
-    cache_info->length);
-  if (cache_info->pixels == (PixelPacket *) NULL)
-    {
-      cache_info->mapped=MagickTrue;
-      cache_info->pixels=(PixelPacket *) MapBlob(-1,IOMode,0,(size_t)
-        cache_info->length);
-    }
-}
-
 static MagickBooleanType ExtendCache(Image *image,MagickSizeType length)
 {
   CacheInfo
@@ -4068,7 +4055,9 @@
       if (((cache_info->type == UndefinedCache) && (status != MagickFalse)) ||
           (cache_info->type == MemoryCache))
         {
-          AllocatePixelCachePixels(cache_info);
+          cache_info->mapped=MagickFalse;
+          cache_info->pixels=(PixelPacket *) AcquireMagickMemory((size_t)
+            cache_info->length);
           if (cache_info->pixels == (PixelPacket *) NULL)
             cache_info->pixels=source_info.pixels;
           else
