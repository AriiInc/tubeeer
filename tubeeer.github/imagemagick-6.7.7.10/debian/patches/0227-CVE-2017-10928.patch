Backport of:

From 7739e890a1e0ad0057a28e740e42147d620f4159 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Tue, 4 Jul 2017 19:39:46 -0400
Subject: [PATCH] CVE-2017-10928

A heap-based buffer over-read in the GetNextToken function in token.c allows remote attackers to obtain
sensitive information from process memory or possibly have unspecified other impact
via a crafted SVG document that is mishandled in the GetUserSpaceCoordinateValue function in coders/svg.c.

origin: https://github.com/ImageMagick/ImageMagick/commit/663e70e90257797f4634ea8dd4a31e0947d1f266
bug: https://github.com/ImageMagick/ImageMagick/issues/539
bug-debian: https://bugs.debian.org/867367

(cherry picked from commit 663e70e90257797f4634ea8dd4a31e0947d1f266)
(cherry picked from commit cd8b03158aba399c5f80df2d48e72afbad2c80de)
---
 magick/token.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

Index: imagemagick-6.7.7.10/magick/token.c
===================================================================
--- imagemagick-6.7.7.10.orig/magick/token.c	2017-07-31 07:22:28.457067853 -0400
+++ imagemagick-6.7.7.10/magick/token.c	2017-07-31 07:24:03.161072269 -0400
@@ -176,9 +176,13 @@ MagickExport void GetMagickToken(const c
   register ssize_t
     i;
 
+  size_t
+    length;
+ 
   assert(start != (const char *) NULL);
   assert(token != (char *) NULL);
   i=0;
+  length=strlen(start);
   for (p=start; *p != '\0'; )
   {
     while ((isspace((int) ((unsigned char) *p)) != 0) && (*p != '\0'))
@@ -214,6 +218,8 @@ MagickExport void GetMagickToken(const c
                 break;
               }
           token[i++]=(*p);
+          if ((p-start) >= length)
+            break;
         }
         break;
       }
@@ -234,7 +240,11 @@ MagickExport void GetMagickToken(const c
         if ((p != q) && (*p != ','))
           {
             for ( ; (p < q) && (*p != ','); p++)
+            {
               token[i++]=(*p);
+              if ((p-start) >= length)
+                break;
+            }
             if (*p == '%')
               token[i++]=(*p++);
             break;
@@ -261,7 +271,11 @@ MagickExport void GetMagickToken(const c
               token[i++]=(*p);
               if ((*p == ')') && (*(p-1) != '\\'))
                 break;
+              if ((p-start) >= length)
+                break;
             }
+          if ((p-start) >= length)
+            break;
         }
         break;
       }
