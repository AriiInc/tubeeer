Backport of:

From 08f033c1dca2e660303c2fbc818076905adf3a8d Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Thu, 23 Oct 2014 21:53:50 +0000
Subject: [PATCH] Fixed buffer overflow in PCX reader.

---
 coders/pcx.c | 28 +++++++++++++++-------------
 1 file changed, 15 insertions(+), 13 deletions(-)

Index: imagemagick-6.7.7.10/coders/pcx.c
===================================================================
--- imagemagick-6.7.7.10.orig/coders/pcx.c	2016-11-11 08:34:38.868610114 -0500
+++ imagemagick-6.7.7.10/coders/pcx.c	2016-11-11 08:36:32.957743737 -0500
@@ -221,6 +221,12 @@
 
 static Image *ReadPCXImage(const ImageInfo *image_info,ExceptionInfo *exception)
 {
+#define ThrowPCXException(severity,tag) \
+  { \
+    scanline=(unsigned char *) RelinquishMagickMemory(scanline); \
+    ThrowReaderException(severity,tag); \
+  }
+
   Image
     *image;
 
@@ -265,7 +271,7 @@
 
   unsigned char
     packet,
-    *pcx_colormap,
+    pcx_colormap[768],
     *pcx_pixels,
     *scanline;
 
@@ -318,7 +324,6 @@
       if (offset < 0)
         ThrowReaderException(CorruptImageError,"ImproperImageHeader");
     }
-  pcx_colormap=(unsigned char *) NULL;
   count=ReadBlob(image,1,&pcx_info.identifier);
   for (id=1; id < 1024; id++)
   {
@@ -351,10 +356,6 @@
     image->x_resolution=(double) pcx_info.horizontal_resolution;
     image->y_resolution=(double) pcx_info.vertical_resolution;
     image->colors=16;
-    pcx_colormap=(unsigned char *) AcquireQuantumMemory(256UL,
-      3*sizeof(*pcx_colormap));
-    if (pcx_colormap == (unsigned char *) NULL)
-      ThrowReaderException(ResourceLimitError,"MemoryAllocationFailed");
     count=ReadBlob(image,3*image->colors,pcx_colormap);
     pcx_info.reserved=(unsigned char) ReadBlobByte(image);
     pcx_info.planes=(unsigned char) ReadBlobByte(image);
@@ -387,6 +388,9 @@
     */
     pcx_packets=(size_t) image->rows*pcx_info.bytes_per_line*
       pcx_info.planes;
+    if ((size_t) (pcx_info.bits_per_pixel*pcx_info.planes*image->columns) >
+        (pcx_packets*8U))
+      ThrowReaderException(CorruptImageError,"ImproperImageHeader");
     pcx_pixels=(unsigned char *) AcquireQuantumMemory(pcx_packets,
       sizeof(*pcx_pixels));
     scanline=(unsigned char *) AcquireQuantumMemory(MagickMax(image->columns,
@@ -441,7 +445,7 @@
             Initialize image colormap.
           */
           if (image->colors > 256)
-            ThrowReaderException(CorruptImageError,"ColormapExceeds256Colors");
+            ThrowPCXException(CorruptImageError,"ColormapExceeds256Colors");
           if ((pcx_info.bits_per_pixel*pcx_info.planes) == 1)
             {
               /*
@@ -470,7 +474,6 @@
                   image->colormap[i].blue=ScaleCharToQuantum(*p++);
                 }
             }
-          pcx_colormap=(unsigned char *) RelinquishMagickMemory(pcx_colormap);
         }
     /*
       Convert PCX raster image to pixel packets.
@@ -627,8 +630,6 @@
     if (image->storage_class == PseudoClass)
       (void) SyncImage(image);
     scanline=(unsigned char *) RelinquishMagickMemory(scanline);
-    if (pcx_colormap != (unsigned char *) NULL)
-      pcx_colormap=(unsigned char *) RelinquishMagickMemory(pcx_colormap);
     pcx_pixels=(unsigned char *) RelinquishMagickMemory(pcx_pixels);
     if (EOFBlob(image) != MagickFalse)
       {
