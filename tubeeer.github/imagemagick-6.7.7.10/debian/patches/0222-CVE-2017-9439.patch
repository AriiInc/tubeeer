From 1d62826f983d7e4da3fd8c33c02b1e594b02a88f Mon Sep 17 00:00:00 2001
From: Dirk Lemstra <dirk@git.imagemagick.org>
Date: Tue, 2 May 2017 08:26:36 +0200
Subject: [PATCH] CVE-2017-9439

A memory leak was found in the function ReadPDBImage in coders/pdb.c, which allows attackers to cause a denial of service via a crafted file.

bug: https://github.com/ImageMagick/ImageMagick/issues/460
origin: https://github.com/ImageMagick/ImageMagick/commit/6c6abed989ea4a3ef472db65ab487c1809a3a718
bug-debian: https://bugs.debian.org/864274

(cherry picked from commit 6c6abed989ea4a3ef472db65ab487c1809a3a718)
---
 coders/pdb.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

Index: imagemagick-6.7.7.10/coders/pdb.c
===================================================================
--- imagemagick-6.7.7.10.orig/coders/pdb.c	2017-07-21 10:01:03.721293753 -0400
+++ imagemagick-6.7.7.10/coders/pdb.c	2017-07-21 10:01:03.717293753 -0400
@@ -421,19 +421,25 @@ static Image *ReadPDBImage(const ImageIn
     case 0:
     {
       image->compression=NoCompression;
-      count=(ssize_t) ReadBlob(image, packets * image -> rows, pixels);
+      count=(ssize_t) ReadBlob(image,packets*image->rows,pixels);
       break;
     }
     case 1:
     {
       image->compression=RLECompression;
-      if (!DecodeImage(image, pixels, packets * image -> rows))
-        ThrowReaderException( CorruptImageError, "RLEDecoderError" );
+      if (!DecodeImage(image,pixels,packets*image->rows))
+        {
+          pixels=(unsigned char *) RelinquishMagickMemory(pixels);
+          ThrowReaderException( CorruptImageError,"RLEDecoderError");
+        }
       break;
     }
     default:
-      ThrowReaderException(CorruptImageError,
-         "UnrecognizedImageCompressionType" );
+      {
+        pixels=(unsigned char *) RelinquishMagickMemory(pixels);
+        ThrowReaderException(CorruptImageError,
+          "UnrecognizedImageCompressionType");
+      }
   }
   p=pixels;
   switch (bits_per_pixel)
@@ -534,7 +540,10 @@ static Image *ReadPDBImage(const ImageIn
       break;
     }
     default:
+    {
+      pixels=(unsigned char *) RelinquishMagickMemory(pixels);
       ThrowReaderException(CorruptImageError,"ImproperImageHeader");
+    }
   }
   pixels=(unsigned char *) RelinquishMagickMemory(pixels);
   if (EOFBlob(image) != MagickFalse)
